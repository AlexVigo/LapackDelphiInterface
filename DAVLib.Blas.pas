{----------------------------------------------------}
{ Delphi interface to the Lapack 3.+ library        }
{ All types are sypported:                           }
{ PSingle, PDouble, Complex PSingle, Complex PDouble }
{ July 19, 2021                                      }
{ Modified by Alex Vigo                              }
{ See original file comments below.                  }
{----------------------------------------------------}

{----------------------------------------------------}
{ Delphi interface to the Lapack library             }
{ Lapack version 3.9.1                               }
{ See Lapack documentation for more details          }
{ Last modified 19/07/21                             }
{ Generated by Alex Vigo (dev.alexvigo@gmail.com)    }
{----------------------------------------------------}

unit DAVLib.Blas;

interface

uses
  DAVLib.ComplexType, System.SysUtils;

const

  LibDllPath = 'libblas.dll';

//File generated by Lapack2PasHeaders
//File name caxpy
procedure caxpy_(const {in}n: PInteger{}; const {in}ca: PSComplex{}; const {in}cx: PSComplex{ dimension ( 1 + ( n - 1 )*abs( incx ) )}; const {in}incx: PInteger{}; const {inout}cy: PSComplex{ dimension ( 1 + ( n - 1 )*abs( incy ) )}; const {in}incy: PInteger{}); stdcall;



//file name ccopy
procedure ccopy_(const {in}n: PInteger{}; const {in}cx: PSComplex{ dimension ( 1 + ( n - 1 )*abs( incx ) )}; const {in}incx: PInteger{}; const {out}cy: PSComplex{ dimension ( 1 + ( n - 1 )*abs( incy ) )}; const {in}incy: PInteger{}); stdcall;



//file name cdotc
function cdotc_(const {in}n: PInteger{}; const {in}cx: PSComplex{ dimension ( 1 + ( n - 1 )*abs( incx ) )}; const {in}incx: PInteger{}; const {in}cy: PSComplex{ dimension ( 1 + ( n - 1 )*abs( incy ) )}; const {in}incy: PInteger{}):PSComplex{}; stdcall;



//file name cdotu
function cdotu(const {in}n: PInteger{}; const {in}cx: PSComplex{ dimension ( 1 + ( n - 1 )*abs( incx ) )}; const {in}incx: PInteger{}; const {in}cy: PSComplex{ dimension ( 1 + ( n - 1 )*abs( incy ) )}; const {in}incy: PInteger{}):PSComplex{}; stdcall;



//file name cgbmv
procedure cgbmv_(const {in}trans: PChar{*1}; const {in}m: PInteger{}; const {in}n: PInteger{}; const {in}kl: PInteger{}; const {in}ku: PInteger{}; const {in}alpha: PSComplex{}; const {in}a: PSComplex{ dimension ( lda n )}; const {in}lda: PInteger{}; const {in}x: PSComplex{ dimension at least}; const {in}incx: PInteger{}; const {in}beta: PSComplex{}; const {inout}y: PSComplex{ dimension at least}; const {in}incy: PInteger{}); stdcall;



//file name cgemm
procedure cgemm_(const {in}transa: PChar{*1}; const {in}transb: PChar{*1}; const {in}m: PInteger{}; const {in}n: PInteger{}; const {in}k: PInteger{}; const {in}alpha: PSComplex{}; const {in}a: PSComplex{ dimension ( lda ka ) where ka is}; const {in}lda: PInteger{}; const {in}b: PSComplex{ dimension ( ldb kb ) where kb is}; const {in}ldb: PInteger{}; const {in}beta: PSComplex{}; const {inout}c: PSComplex{ dimension ( ldc n )}; const {in}ldc: PInteger{}); stdcall;



//file name cgemv
procedure cgemv_(const {in}trans: PChar{*1}; const {in}m: PInteger{}; const {in}n: PInteger{}; const {in}alpha: PSComplex{}; const {in}a: PSComplex{ dimension ( lda n )}; const {in}lda: PInteger{}; const {in}x: PSComplex{ dimension at least}; const {in}incx: PInteger{}; const {in}beta: PSComplex{}; const {inout}y: PSComplex{ dimension at least}; const {in}incy: PInteger{}); stdcall;



//file name cgerc
procedure cgerc_(const {in}m: PInteger{}; const {in}n: PInteger{}; const {in}alpha: PSComplex{}; const {in}x: PSComplex{ dimension at least}; const {in}incx: PInteger{}; const {in}y: PSComplex{ dimension at least}; const {in}incy: PInteger{}; const {inout}a: PSComplex{ dimension ( lda n )}; const {in}lda: PInteger{}); stdcall;



//file name cgeru
procedure cgeru_(const {in}m: PInteger{}; const {in}n: PInteger{}; const {in}alpha: PSComplex{}; const {in}x: PSComplex{ dimension at least}; const {in}incx: PInteger{}; const {in}y: PSComplex{ dimension at least}; const {in}incy: PInteger{}; const {inout}a: PSComplex{ dimension ( lda n )}; const {in}lda: PInteger{}); stdcall;



//file name chbmv
procedure chbmv_(const {in}uplo: PChar{*1}; const {in}n: PInteger{}; const {in}k: PInteger{}; const {in}alpha: PSComplex{}; const {in}a: PSComplex{ dimension ( lda n )}; const {in}lda: PInteger{}; const {in}x: PSComplex{ dimension at least}; const {in}incx: PInteger{}; const {in}beta: PSComplex{}; const {inout}y: PSComplex{ dimension at least}; const {in}incy: PInteger{}); stdcall;



//file name chemm
procedure chemm_(const {in}side: PChar{*1}; const {in}uplo: PChar{*1}; const {in}m: PInteger{}; const {in}n: PInteger{}; const {in}alpha: PSComplex{}; const {in}a: PSComplex{ dimension ( lda ka ) where ka is}; const {in}lda: PInteger{}; const {in}b: PSComplex{ dimension ( ldb n )}; const {in}ldb: PInteger{}; const {in}beta: PSComplex{}; const {inout}c: PSComplex{ dimension ( ldc n )}; const {in}ldc: PInteger{}); stdcall;



//file name chemv
procedure chemv_(const {in}uplo: PChar{*1}; const {in}n: PInteger{}; const {in}alpha: PSComplex{}; const {in}a: PSComplex{ dimension ( lda n )}; const {in}lda: PInteger{}; const {in}x: PSComplex{ dimension at least}; const {in}incx: PInteger{}; const {in}beta: PSComplex{}; const {inout}y: PSComplex{ dimension at least}; const {in}incy: PInteger{}); stdcall;



//file name cher
procedure cher_(const {in}uplo: PChar{*1}; const {in}n: PInteger{}; const {in}alpha: PSingle{}; const {in}x: PSComplex{ dimension at least}; const {in}incx: PInteger{}; const {inout}a: PSComplex{ dimension ( lda n )}; const {in}lda: PInteger{}); stdcall;



//file name cher2
procedure cher2_(const {in}uplo: PChar{*1}; const {in}n: PInteger{}; const {in}alpha: PSComplex{}; const {in}x: PSComplex{ dimension at least}; const {in}incx: PInteger{}; const {in}y: PSComplex{ dimension at least}; const {in}incy: PInteger{}; const {inout}a: PSComplex{ dimension ( lda n )}; const {in}lda: PInteger{}); stdcall;



//file name cher2k
procedure cher2k_(const {in}uplo: PChar{*1}; const {in}trans: PChar{*1}; const {in}n: PInteger{}; const {in}k: PInteger{}; const {in}alpha: PSComplex{}; const {in}a: PSComplex{ dimension ( lda ka ) where ka is}; const {in}lda: PInteger{}; const {in}b: PSComplex{ dimension ( ldb kb ) where kb is}; const {in}ldb: PInteger{}; const {in}beta: PSingle{}; const {inout}c: PSComplex{ dimension ( ldc n )}; const {in}ldc: PInteger{}); stdcall;



//file name cherk
procedure cherk_(const {in}uplo: PChar{*1}; const {in}trans: PChar{*1}; const {in}n: PInteger{}; const {in}k: PInteger{}; const {in}alpha: PSingle{}; const {in}a: PSComplex{ dimension ( lda ka ) where ka is}; const {in}lda: PInteger{}; const {in}beta: PSingle{}; const {inout}c: PSComplex{ dimension ( ldc n )}; const {in}ldc: PInteger{}); stdcall;



//file name chpmv
procedure chpmv_(const {in}uplo: PChar{*1}; const {in}n: PInteger{}; const {in}alpha: PSComplex{}; const {in}ap: PSComplex{ dimension at least}; const {in}x: PSComplex{ dimension at least}; const {in}incx: PInteger{}; const {in}beta: PSComplex{}; const {inout}y: PSComplex{ dimension at least}; const {in}incy: PInteger{}); stdcall;



//file name chpr
procedure chpr_(const {in}uplo: PChar{*1}; const {in}n: PInteger{}; const {in}alpha: PSingle{}; const {in}x: PSComplex{ dimension at least}; const {in}incx: PInteger{}; const {inout}ap: PSComplex{ dimension at least}); stdcall;



//file name chpr2
procedure chpr2_(const {in}uplo: PChar{*1}; const {in}n: PInteger{}; const {in}alpha: PSComplex{}; const {in}x: PSComplex{ dimension at least}; const {in}incx: PInteger{}; const {in}y: PSComplex{ dimension at least}; const {in}incy: PInteger{}; const {inout}ap: PSComplex{ dimension at least}); stdcall;



//file name crotg
procedure crotg_(const {inout}ca: PSComplex{}; const {in}cb: PSComplex{}; const {out}c: PSingle{}; const {out}s: PSComplex{}); stdcall;



//file name cscal
procedure cscal_(const {in}n: PInteger{}; const {in}ca: PSComplex{}; const {inout}cx: PSComplex{ dimension ( 1 + ( n - 1 )*abs( incx ) )}; const {in}incx: PInteger{}); stdcall;



//file name csrot
procedure csrot_(const {in}n: PInteger{}; const {inout}cx: PSComplex{ dimension at least}; const {in}incx: PInteger{}; const {inout}cy: PSComplex{ dimension at least}; const {in}incy: PInteger{}; const {in}c: PSingle{}; const {in}s: PSingle{}); stdcall;



//file name csscal
procedure csscal_(const {in}n: PInteger{}; const {in}sa: PSingle{}; const {inout}cx: PSComplex{ dimension ( 1 + ( n - 1 )*abs( incx ) )}; const {in}incx: PInteger{}); stdcall;



//file name cswap
procedure cswap_(const {in}n: PInteger{}; const {inout}cx: PSComplex{ dimension ( 1 + ( n - 1 )*abs( incx ) )}; const {in}incx: PInteger{}; const {inout}cy: PSComplex{ dimension ( 1 + ( n - 1 )*abs( incy ) )}; const {in}incy: PInteger{}); stdcall;



//file name csymm
procedure csymm_(const {in}side: PChar{*1}; const {in}uplo: PChar{*1}; const {in}m: PInteger{}; const {in}n: PInteger{}; const {in}alpha: PSComplex{}; const {in}a: PSComplex{ dimension ( lda ka ) where ka is}; const {in}lda: PInteger{}; const {in}b: PSComplex{ dimension ( ldb n )}; const {in}ldb: PInteger{}; const {in}beta: PSComplex{}; const {inout}c: PSComplex{ dimension ( ldc n )}; const {in}ldc: PInteger{}); stdcall;



//file name csyr2k
procedure csyr2k_(const {in}uplo: PChar{*1}; const {in}trans: PChar{*1}; const {in}n: PInteger{}; const {in}k: PInteger{}; const {in}alpha: PSComplex{}; const {in}a: PSComplex{ dimension ( lda ka ) where ka is}; const {in}lda: PInteger{}; const {in}b: PSComplex{ dimension ( ldb kb ) where kb is}; const {in}ldb: PInteger{}; const {in}beta: PSComplex{}; const {inout}c: PSComplex{ dimension ( ldc n )}; const {in}ldc: PInteger{}); stdcall;



//file name csyrk
procedure csyrk_(const {in}uplo: PChar{*1}; const {in}trans: PChar{*1}; const {in}n: PInteger{}; const {in}k: PInteger{}; const {in}alpha: PSComplex{}; const {in}a: PSComplex{ dimension ( lda ka ) where ka is}; const {in}lda: PInteger{}; const {in}beta: PSComplex{}; const {inout}c: PSComplex{ dimension ( ldc n )}; const {in}ldc: PInteger{}); stdcall;



//file name ctbmv
procedure ctbmv_(const {in}uplo: PChar{*1}; const {in}trans: PChar{*1}; const {in}diag: PChar{*1}; const {in}n: PInteger{}; const {in}k: PInteger{}; const {in}a: PSComplex{ dimension ( lda n )}; const {in}lda: PInteger{}; const {inout}x: PSComplex{ dimension at least}; const {in}incx: PInteger{}); stdcall;



//file name ctbsv
procedure ctbsv_(const {in}uplo: PChar{*1}; const {in}trans: PChar{*1}; const {in}diag: PChar{*1}; const {in}n: PInteger{}; const {in}k: PInteger{}; const {in}a: PSComplex{ dimension ( lda n )}; const {in}lda: PInteger{}; const {inout}x: PSComplex{ dimension at least}; const {in}incx: PInteger{}); stdcall;



//file name ctpmv
procedure ctpmv_(const {in}uplo: PChar{*1}; const {in}trans: PChar{*1}; const {in}diag: PChar{*1}; const {in}n: PInteger{}; const {in}ap: PSComplex{ dimension at least}; const {inout}x: PSComplex{ dimension at least}; const {in}incx: PInteger{}); stdcall;



//file name ctpsv
procedure ctpsv_(const {in}uplo: PChar{*1}; const {in}trans: PChar{*1}; const {in}diag: PChar{*1}; const {in}n: PInteger{}; const {in}ap: PSComplex{ dimension at least}; const {inout}x: PSComplex{ dimension at least}; const {in}incx: PInteger{}); stdcall;



//file name ctrmm
procedure ctrmm_(const {in}side: PChar{*1}; const {in}uplo: PChar{*1}; const {in}transa: PChar{*1}; const {in}diag: PChar{*1}; const {in}m: PInteger{}; const {in}n: PInteger{}; const {in}alpha: PSComplex{}; const {in}a: PSComplex{ dimension ( lda k ) where k is m}; const {in}lda: PInteger{}; const {inout}b: PSComplex{ dimension ( ldb n )}; const {in}ldb: PInteger{}); stdcall;



//file name ctrmv
procedure ctrmv_(const {in}uplo: PChar{*1}; const {in}trans: PChar{*1}; const {in}diag: PChar{*1}; const {in}n: PInteger{}; const {in}a: PSComplex{ dimension ( lda n )}; const {in}lda: PInteger{}; const {inout}x: PSComplex{ dimension at least}; const {in}incx: PInteger{}); stdcall;



//file name ctrsm
procedure ctrsm_(const {in}side: PChar{*1}; const {in}uplo: PChar{*1}; const {in}transa: PChar{*1}; const {in}diag: PChar{*1}; const {in}m: PInteger{}; const {in}n: PInteger{}; const {in}alpha: PSComplex{}; const {in}a: PSComplex{ dimension ( lda k )}; const {in}lda: PInteger{}; const {inout}b: PSComplex{ dimension ( ldb n )}; const {in}ldb: PInteger{}); stdcall;



//file name ctrsv
procedure ctrsv_(const {in}uplo: PChar{*1}; const {in}trans: PChar{*1}; const {in}diag: PChar{*1}; const {in}n: PInteger{}; const {in}a: PSComplex{ dimension ( lda n )}; const {in}lda: PInteger{}; const {inout}x: PSComplex{ dimension at least}; const {in}incx: PInteger{}); stdcall;



//file name dasum
function dasum_(const {in}n: PInteger{}; const {in}dx: PDouble{ dimension ( 1 + ( n - 1 )*abs( incx ) )}; const {in}incx: PInteger{}):Double{}; stdcall;



//file name daxpy
procedure daxpy_(const {in}n: PInteger{}; const {in}da: PDouble{}; const {in}dx: PDouble{ dimension ( 1 + ( n - 1 )*abs( incx ) )}; const {in}incx: PInteger{}; const {inout}dy: PDouble{ dimension ( 1 + ( n - 1 )*abs( incy ) )}; const {in}incy: PInteger{}); stdcall;



//file name dcabs1
function dcabs1(const {in}z: PDComplex{}):Double{}; stdcall;



//file name dcopy
procedure dcopy_(const {in}n: PInteger{}; const {in}dx: PDouble{ dimension ( 1 + ( n - 1 )*abs( incx ) )}; const {in}incx: PInteger{}; const {out}dy: PDouble{ dimension ( 1 + ( n - 1 )*abs( incy ) )}; const {in}incy: PInteger{}); stdcall;



//file name ddot
function ddot(const {in}n: PInteger{}; const {in}dx: PDouble{ dimension ( 1 + ( n - 1 )*abs( incx ) )}; const {in}incx: PInteger{}; const {in}dy: PDouble{ dimension ( 1 + ( n - 1 )*abs( incy ) )}; const {in}incy: PInteger{}):Double{}; stdcall;



//file name dgbmv
procedure dgbmv_(const {in}trans: PChar{*1}; const {in}m: PInteger{}; const {in}n: PInteger{}; const {in}kl: PInteger{}; const {in}ku: PInteger{}; const {in}alpha: PDouble{}; const {in}a: PDouble{ dimension ( lda n )}; const {in}lda: PInteger{}; const {in}x: PDouble{ dimension at least}; const {in}incx: PInteger{}; const {in}beta: PDouble{}; const {inout}y: PDouble{ dimension at least}; const {in}incy: PInteger{}); stdcall;



//file name dgemm
procedure dgemm_(const {in}transa: PChar{*1}; const {in}transb: PChar{*1}; const {in}m: PInteger{}; const {in}n: PInteger{}; const {in}k: PInteger{}; const {in}alpha: PDouble{}; const {in}a: PDouble{ dimension ( lda ka ) where ka is}; const {in}lda: PInteger{}; const {in}b: PDouble{ dimension ( ldb kb ) where kb is}; const {in}ldb: PInteger{}; const {in}beta: PDouble{}; const {inout}c: PDouble{ dimension ( ldc n )}; const {in}ldc: PInteger{}); stdcall;



//file name dgemv
procedure dgemv_(const {in}trans: PChar{*1}; const {in}m: PInteger{}; const {in}n: PInteger{}; const {in}alpha: PDouble{}; const {in}a: PDouble{ dimension ( lda n )}; const {in}lda: PInteger{}; const {in}x: PDouble{ dimension at least}; const {in}incx: PInteger{}; const {in}beta: PDouble{}; const {inout}y: PDouble{ dimension at least}; const {in}incy: PInteger{}); stdcall;



//file name dger
procedure dger_(const {in}m: PInteger{}; const {in}n: PInteger{}; const {in}alpha: PDouble{}; const {in}x: PDouble{ dimension at least}; const {in}incx: PInteger{}; const {in}y: PDouble{ dimension at least}; const {in}incy: PInteger{}; const {inout}a: PDouble{ dimension ( lda n )}; const {in}lda: PInteger{}); stdcall;



//file name dnrm2
function dnrm2(const {in}n: PInteger{}; const {in}x: PDouble{ dimension ( 1 + ( n - 1 )*abs( incx ) )}; const {in}incx: PInteger{}):Double{}; stdcall;



//file name drot
procedure drot_(const {in}n: PInteger{}; const {inout}dx: PDouble{ dimension ( 1 + ( n - 1 )*abs( incx ) )}; const {in}incx: PInteger{}; const {inout}dy: PDouble{ dimension ( 1 + ( n - 1 )*abs( incy ) )}; const {in}incy: PInteger{}; const {in}c: PDouble{}; const {in}s: PDouble{}); stdcall;



//file name drotg
procedure drotg_(const {inout}da: PDouble{}; const {inout}db: PDouble{}; const {out}c: PDouble{}; const {out}s: PDouble{}); stdcall;



//file name drotm
procedure drotm_(const {in}n: PInteger{}; const {inout}dx: PDouble{ dimension ( 1 + ( n - 1 )*abs( incx ) )}; const {in}incx: PInteger{}; const {inout}dy: PDouble{ dimension ( 1 + ( n - 1 )*abs( incy ) )}; const {in}incy: PInteger{}; const {in}dparam: PDouble{ dimension (5)}); stdcall;



//file name drotmg
procedure drotmg_(const {inout}dd1: PDouble{}; const {inout}dd2: PDouble{}; const {inout}dx1: PDouble{}; const {in}dy1: PDouble{}; const {out}dparam: PDouble{ dimension (5)}); stdcall;



//file name dsbmv
procedure dsbmv_(const {in}uplo: PChar{*1}; const {in}n: PInteger{}; const {in}k: PInteger{}; const {in}alpha: PDouble{}; const {in}a: PDouble{ dimension ( lda n )}; const {in}lda: PInteger{}; const {in}x: PDouble{ dimension at least}; const {in}incx: PInteger{}; const {in}beta: PDouble{}; const {inout}y: PDouble{ dimension at least}; const {in}incy: PInteger{}); stdcall;



//file name dscal
procedure dscal_(const {in}n: PInteger{}; const {in}da: PDouble{}; const {inout}dx: PDouble{ dimension ( 1 + ( n - 1 )*abs( incx ) )}; const {in}incx: PInteger{}); stdcall;



//file name dsdot
function dsdot(const {in}n: PInteger{}; const {in}sx: PSingle{ dimension(n)}; const {in}incx: PInteger{}; const {in}sy: PSingle{ dimension(n)}; const {in}incy: PInteger{}; dsdot: PDouble{}):Double{}; stdcall;



//file name dspmv
procedure dspmv_(const {in}uplo: PChar{*1}; const {in}n: PInteger{}; const {in}alpha: PDouble{}; const {in}ap: PDouble{ dimension at least}; const {in}x: PDouble{ dimension at least}; const {in}incx: PInteger{}; const {in}beta: PDouble{}; const {inout}y: PDouble{ dimension at least}; const {in}incy: PInteger{}); stdcall;



//file name dspr
procedure dspr_(const {in}uplo: PChar{*1}; const {in}n: PInteger{}; const {in}alpha: PDouble{}; const {in}x: PDouble{ dimension at least}; const {in}incx: PInteger{}; const {inout}ap: PDouble{ dimension at least}); stdcall;



//file name dspr2
procedure dspr2_(const {in}uplo: PChar{*1}; const {in}n: PInteger{}; const {in}alpha: PDouble{}; const {in}x: PDouble{ dimension at least}; const {in}incx: PInteger{}; const {in}y: PDouble{ dimension at least}; const {in}incy: PInteger{}; const {inout}ap: PDouble{ dimension at least}); stdcall;



//file name dswap
procedure dswap_(const {in}n: PInteger{}; const {inout}dx: PDouble{ dimension ( 1 + ( n - 1 )*abs( incx ) )}; const {in}incx: PInteger{}; const {inout}dy: PDouble{ dimension ( 1 + ( n - 1 )*abs( incy ) )}; const {in}incy: PInteger{}); stdcall;



//file name dsymm
procedure dsymm_(const {in}side: PChar{*1}; const {in}uplo: PChar{*1}; const {in}m: PInteger{}; const {in}n: PInteger{}; const {in}alpha: PDouble{}; const {in}a: PDouble{ dimension ( lda ka ) where ka is}; const {in}lda: PInteger{}; const {in}b: PDouble{ dimension ( ldb n )}; const {in}ldb: PInteger{}; const {in}beta: PDouble{}; const {inout}c: PDouble{ dimension ( ldc n )}; const {in}ldc: PInteger{}); stdcall;



//file name dsymv
procedure dsymv_(const {in}uplo: PChar{*1}; const {in}n: PInteger{}; const {in}alpha: PDouble{}; const {in}a: PDouble{ dimension ( lda n )}; const {in}lda: PInteger{}; const {in}x: PDouble{ dimension at least}; const {in}incx: PInteger{}; const {in}beta: PDouble{}; const {inout}y: PDouble{ dimension at least}; const {in}incy: PInteger{}); stdcall;



//file name dsyr
procedure dsyr_(const {in}uplo: PChar{*1}; const {in}n: PInteger{}; const {in}alpha: PDouble{}; const {in}x: PDouble{ dimension at least}; const {in}incx: PInteger{}; const {inout}a: PDouble{ dimension ( lda n )}; const {in}lda: PInteger{}); stdcall;



//file name dsyr2
procedure dsyr2_(const {in}uplo: PChar{*1}; const {in}n: PInteger{}; const {in}alpha: PDouble{}; const {in}x: PDouble{ dimension at least}; const {in}incx: PInteger{}; const {in}y: PDouble{ dimension at least}; const {in}incy: PInteger{}; const {inout}a: PDouble{ dimension ( lda n )}; const {in}lda: PInteger{}); stdcall;



//file name dsyr2k
procedure dsyr2k_(const {in}uplo: PChar{*1}; const {in}trans: PChar{*1}; const {in}n: PInteger{}; const {in}k: PInteger{}; const {in}alpha: PDouble{}; const {in}a: PDouble{ dimension ( lda ka ) where ka is}; const {in}lda: PInteger{}; const {in}b: PDouble{ dimension ( ldb kb ) where kb is}; const {in}ldb: PInteger{}; const {in}beta: PDouble{}; const {inout}c: PDouble{ dimension ( ldc n )}; const {in}ldc: PInteger{}); stdcall;



//file name dsyrk
procedure dsyrk_(const {in}uplo: PChar{*1}; const {in}trans: PChar{*1}; const {in}n: PInteger{}; const {in}k: PInteger{}; const {in}alpha: PDouble{}; const {in}a: PDouble{ dimension ( lda ka ) where ka is}; const {in}lda: PInteger{}; const {in}beta: PDouble{}; const {inout}c: PDouble{ dimension ( ldc n )}; const {in}ldc: PInteger{}); stdcall;



//file name dtbmv
procedure dtbmv_(const {in}uplo: PChar{*1}; const {in}trans: PChar{*1}; const {in}diag: PChar{*1}; const {in}n: PInteger{}; const {in}k: PInteger{}; const {in}a: PDouble{ dimension ( lda n )}; const {in}lda: PInteger{}; const {inout}x: PDouble{ dimension at least}; const {in}incx: PInteger{}); stdcall;



//file name dtbsv
procedure dtbsv_(const {in}uplo: PChar{*1}; const {in}trans: PChar{*1}; const {in}diag: PChar{*1}; const {in}n: PInteger{}; const {in}k: PInteger{}; const {in}a: PDouble{ dimension ( lda n )}; const {in}lda: PInteger{}; const {inout}x: PDouble{ dimension at least}; const {in}incx: PInteger{}); stdcall;



//file name dtpmv
procedure dtpmv_(const {in}uplo: PChar{*1}; const {in}trans: PChar{*1}; const {in}diag: PChar{*1}; const {in}n: PInteger{}; const {in}ap: PDouble{ dimension at least}; const {inout}x: PDouble{ dimension at least}; const {in}incx: PInteger{}); stdcall;



//file name dtpsv
procedure dtpsv_(const {in}uplo: PChar{*1}; const {in}trans: PChar{*1}; const {in}diag: PChar{*1}; const {in}n: PInteger{}; const {in}ap: PDouble{ dimension at least}; const {inout}x: PDouble{ dimension at least}; const {in}incx: PInteger{}); stdcall;



//file name dtrmm
procedure dtrmm_(const {in}side: PChar{*1}; const {in}uplo: PChar{*1}; const {in}transa: PChar{*1}; const {in}diag: PChar{*1}; const {in}m: PInteger{}; const {in}n: PInteger{}; const {in}alpha: PDouble{}; const {in}a: PDouble{ dimension ( lda k ) where k is m}; const {in}lda: PInteger{}; const {inout}b: PDouble{ dimension ( ldb n )}; const {in}ldb: PInteger{}); stdcall;



//file name dtrmv
procedure dtrmv_(const {in}uplo: PChar{*1}; const {in}trans: PChar{*1}; const {in}diag: PChar{*1}; const {in}n: PInteger{}; const {in}a: PDouble{ dimension ( lda n )}; const {in}lda: PInteger{}; const {inout}x: PDouble{ dimension at least}; const {in}incx: PInteger{}); stdcall;



//file name dtrsm
procedure dtrsm_(const {in}side: PChar{*1}; const {in}uplo: PChar{*1}; const {in}transa: PChar{*1}; const {in}diag: PChar{*1}; const {in}m: PInteger{}; const {in}n: PInteger{}; const {in}alpha: PDouble{}; const {in}a: PDouble{ dimension ( lda k )}; const {in}lda: PInteger{}; const {inout}b: PDouble{ dimension ( ldb n )}; const {in}ldb: PInteger{}); stdcall;



//file name dtrsv
procedure dtrsv_(const {in}uplo: PChar{*1}; const {in}trans: PChar{*1}; const {in}diag: PChar{*1}; const {in}n: PInteger{}; const {in}a: PDouble{ dimension ( lda n )}; const {in}lda: PInteger{}; const {inout}x: PDouble{ dimension at least}; const {in}incx: PInteger{}); stdcall;



//file name dzasum
function dzasum(const {in}n: PInteger{}; const {inout}zx: PDComplex{ dimension ( 1 + ( n - 1 )*abs( incx ) )}; const {in}incx: PInteger{}):Double{}; stdcall;



//file name dznrm2
function dznrm2(const {in}n: PInteger{}; const {in}x: PDComplex{ dimension (n)}; const {in}incx: PInteger{}):Double{}; stdcall;



//file name icamax
function icamax(const {in}n: PInteger{}; const {in}cx: PSComplex{ dimension ( 1 + ( n - 1 )*abs( incx ) )}; const {in}incx: PInteger{}):Integer{}; stdcall;



//file name idamax
function idamax(const {in}n: PInteger{}; const {in}dx: PDouble{ dimension ( 1 + ( n - 1 )*abs( incx ) )}; const {in}incx: PInteger{}):Integer{}; stdcall;



//file name isamax
function isamax(const {in}n: PInteger{}; const {in}sx: PSingle{ dimension ( 1 + ( n - 1 )*abs( incx ) )}; const {in}incx: PInteger{}):Integer{}; stdcall;



//file name izamax
function izamax(const {in}n: PInteger{}; const {in}zx: PDComplex{ dimension ( 1 + ( n - 1 )*abs( incx ) )}; const {in}incx: PInteger{}):Integer{}; stdcall;



//file name lsame
function lsame(const {in}ca: PChar{*1}; const {in}cb: PChar{*1}):Boolean{}; stdcall;



//file name sasum
function sasum(const {in}n: PInteger{}; const {in}sx: PSingle{ dimension ( 1 + ( n - 1 )*abs( incx ) )}; const {in}incx: PInteger{}):Single{}; stdcall;



//file name saxpy
procedure saxpy_(const {in}n: PInteger{}; const {in}sa: PSingle{}; const {in}sx: PSingle{ dimension ( 1 + ( n - 1 )*abs( incx ) )}; const {in}incx: PInteger{}; const {inout}sy: PSingle{ dimension ( 1 + ( n - 1 )*abs( incy ) )}; const {in}incy: PInteger{}); stdcall;



//file name scabs1
function scabs1(const {in}z: PSComplex{}):Single{}; stdcall;



//file name scasum
function scasum(const {in}n: PInteger{}; const {inout}cx: PSComplex{ dimension ( 1 + ( n - 1 )*abs( incx ) )}; const {in}incx: PInteger{}):Single{}; stdcall;



//file name scnrm2
function scnrm2(const {in}n: PInteger{}; const {in}x: PSComplex{ dimension (n)}; const {in}incx: PInteger{}):Single{}; stdcall;



//file name scopy
procedure scopy_(const {in}n: PInteger{}; const {in}sx: PSingle{ dimension ( 1 + ( n - 1 )*abs( incx ) )}; const {in}incx: PInteger{}; const {out}sy: PSingle{ dimension ( 1 + ( n - 1 )*abs( incy ) )}; const {in}incy: PInteger{}); stdcall;



//file name sdot
function sdot(const {in}n: PInteger{}; const {in}sx: PSingle{ dimension ( 1 + ( n - 1 )*abs( incx ) )}; const {in}incx: PInteger{}; const {in}sy: PSingle{ dimension ( 1 + ( n - 1 )*abs( incy ) )}; const {in}incy: PInteger{}):Single{}; stdcall;



//file name sdsdot
function sdsdot(const {in}n: PInteger{}; const {in}sb: PSingle{}; const {in}sx: PSingle{ dimension ( 1 + ( n - 1 )*abs( incx ) )}; const {in}incx: PInteger{}; const {in}sy: PSingle{ dimension ( 1 + ( n - 1 )*abs( incx ) )}; const {in}incy: PInteger{}):Single{}; stdcall;



//file name sgbmv
procedure sgbmv_(const {in}trans: PChar{*1}; const {in}m: PInteger{}; const {in}n: PInteger{}; const {in}kl: PInteger{}; const {in}ku: PInteger{}; const {in}alpha: PSingle{}; const {in}a: PSingle{ dimension ( lda n )}; const {in}lda: PInteger{}; const {in}x: PSingle{ dimension at least}; const {in}incx: PInteger{}; const {in}beta: PSingle{}; const {inout}y: PSingle{ dimension at least}; const {in}incy: PInteger{}); stdcall;



//file name sgemm
procedure sgemm_(const {in}transa: PChar{*1}; const {in}transb: PChar{*1}; const {in}m: PInteger{}; const {in}n: PInteger{}; const {in}k: PInteger{}; const {in}alpha: PSingle{}; const {in}a: PSingle{ dimension ( lda ka ) where ka is}; const {in}lda: PInteger{}; const {in}b: PSingle{ dimension ( ldb kb ) where kb is}; const {in}ldb: PInteger{}; const {in}beta: PSingle{}; const {inout}c: PSingle{ dimension ( ldc n )}; const {in}ldc: PInteger{}); stdcall;



//file name sgemv
procedure sgemv_(const {in}trans: PChar{*1}; const {in}m: PInteger{}; const {in}n: PInteger{}; const {in}alpha: PSingle{}; const {in}a: PSingle{ dimension ( lda n )}; const {in}lda: PInteger{}; const {in}x: PSingle{ dimension at least}; const {in}incx: PInteger{}; const {in}beta: PSingle{}; const {inout}y: PSingle{ dimension at least}; const {in}incy: PInteger{}); stdcall;



//file name sger
procedure sger_(const {in}m: PInteger{}; const {in}n: PInteger{}; const {in}alpha: PSingle{}; const {in}x: PSingle{ dimension at least}; const {in}incx: PInteger{}; const {in}y: PSingle{ dimension at least}; const {in}incy: PInteger{}; const {inout}a: PSingle{ dimension ( lda n )}; const {in}lda: PInteger{}); stdcall;



//file name snrm2
function snrm2(const {in}n: PInteger{}; const {in}x: PSingle{ dimension ( 1 + ( n - 1 )*abs( incx ) )}; const {in}incx: PInteger{}):Single{}; stdcall;



//file name srot
procedure srot_(const {in}n: PInteger{}; const {inout}sx: PSingle{ dimension ( 1 + ( n - 1 )*abs( incx ) )}; const {in}incx: PInteger{}; const {inout}sy: PSingle{ dimension ( 1 + ( n - 1 )*abs( incy ) )}; const {in}incy: PInteger{}; const {in}c: PSingle{}; const {in}s: PSingle{}); stdcall;



//file name srotg
procedure srotg_(const {inout}sa: PSingle{}; const {inout}sb: PSingle{}; const {out}c: PSingle{}; const {out}s: PSingle{}); stdcall;



//file name srotm
procedure srotm_(const {in}n: PInteger{}; const {inout}sx: PSingle{ dimension ( 1 + ( n - 1 )*abs( incx ) )}; const {in}incx: PInteger{}; const {inout}sy: PSingle{ dimension ( 1 + ( n - 1 )*abs( incy ) )}; const {in}incy: PInteger{}; const {in}sparam: PSingle{ dimension (5)}); stdcall;



//file name srotmg
procedure srotmg_(const {inout}sd1: PSingle{}; const {inout}sd2: PSingle{}; const {inout}sx1: PSingle{}; const {in}sy1: PSingle{}; const {out}sparam: PSingle{ dimension (5)}); stdcall;



//file name ssbmv
procedure ssbmv_(const {in}uplo: PChar{*1}; const {in}n: PInteger{}; const {in}k: PInteger{}; const {in}alpha: PSingle{}; const {in}a: PSingle{ dimension ( lda n )}; const {in}lda: PInteger{}; const {in}x: PSingle{ dimension at least}; const {in}incx: PInteger{}; const {in}beta: PSingle{}; const {inout}y: PSingle{ dimension at least}; const {in}incy: PInteger{}); stdcall;



//file name sscal
procedure sscal_(const {in}n: PInteger{}; const {in}sa: PSingle{}; const {inout}sx: PSingle{ dimension ( 1 + ( n - 1 )*abs( incx ) )}; const {in}incx: PInteger{}); stdcall;



//file name sspmv
procedure sspmv_(const {in}uplo: PChar{*1}; const {in}n: PInteger{}; const {in}alpha: PSingle{}; const {in}ap: PSingle{ dimension at least}; const {in}x: PSingle{ dimension at least}; const {in}incx: PInteger{}; const {in}beta: PSingle{}; const {inout}y: PSingle{ dimension at least}; const {in}incy: PInteger{}); stdcall;



//file name sspr
procedure sspr_(const {in}uplo: PChar{*1}; const {in}n: PInteger{}; const {in}alpha: PSingle{}; const {in}x: PSingle{ dimension at least}; const {in}incx: PInteger{}; const {inout}ap: PSingle{ dimension at least}); stdcall;



//file name sspr2
procedure sspr2_(const {in}uplo: PChar{*1}; const {in}n: PInteger{}; const {in}alpha: PSingle{}; const {in}x: PSingle{ dimension at least}; const {in}incx: PInteger{}; const {in}y: PSingle{ dimension at least}; const {in}incy: PInteger{}; const {inout}ap: PSingle{ dimension at least}); stdcall;



//file name sswap
procedure sswap_(const {in}n: PInteger{}; const {inout}sx: PSingle{ dimension ( 1 + ( n - 1 )*abs( incx ) )}; const {in}incx: PInteger{}; const {inout}sy: PSingle{ dimension ( 1 + ( n - 1 )*abs( incy ) )}; const {in}incy: PInteger{}); stdcall;



//file name ssymm
procedure ssymm_(const {in}side: PChar{*1}; const {in}uplo: PChar{*1}; const {in}m: PInteger{}; const {in}n: PInteger{}; const {in}alpha: PSingle{}; const {in}a: PSingle{ dimension ( lda ka ) where ka is}; const {in}lda: PInteger{}; const {in}b: PSingle{ dimension ( ldb n )}; const {in}ldb: PInteger{}; const {in}beta: PSingle{}; const {inout}c: PSingle{ dimension ( ldc n )}; const {in}ldc: PInteger{}); stdcall;



//file name ssymv
procedure ssymv_(const {in}uplo: PChar{*1}; const {in}n: PInteger{}; const {in}alpha: PSingle{}; const {in}a: PSingle{ dimension ( lda n )}; const {in}lda: PInteger{}; const {in}x: PSingle{ dimension at least}; const {in}incx: PInteger{}; const {in}beta: PSingle{}; const {inout}y: PSingle{ dimension at least}; const {in}incy: PInteger{}); stdcall;



//file name ssyr
procedure ssyr_(const {in}uplo: PChar{*1}; const {in}n: PInteger{}; const {in}alpha: PSingle{}; const {in}x: PSingle{ dimension at least}; const {in}incx: PInteger{}; const {inout}a: PSingle{ dimension ( lda n )}; const {in}lda: PInteger{}); stdcall;



//file name ssyr2
procedure ssyr2_(const {in}uplo: PChar{*1}; const {in}n: PInteger{}; const {in}alpha: PSingle{}; const {in}x: PSingle{ dimension at least}; const {in}incx: PInteger{}; const {in}y: PSingle{ dimension at least}; const {in}incy: PInteger{}; const {inout}a: PSingle{ dimension ( lda n )}; const {in}lda: PInteger{}); stdcall;



//file name ssyr2k
procedure ssyr2k_(const {in}uplo: PChar{*1}; const {in}trans: PChar{*1}; const {in}n: PInteger{}; const {in}k: PInteger{}; const {in}alpha: PSingle{}; const {in}a: PSingle{ dimension ( lda ka ) where ka is}; const {in}lda: PInteger{}; const {in}b: PSingle{ dimension ( ldb kb ) where kb is}; const {in}ldb: PInteger{}; const {in}beta: PSingle{}; const {inout}c: PSingle{ dimension ( ldc n )}; const {in}ldc: PInteger{}); stdcall;



//file name ssyrk
procedure ssyrk_(const {in}uplo: PChar{*1}; const {in}trans: PChar{*1}; const {in}n: PInteger{}; const {in}k: PInteger{}; const {in}alpha: PSingle{}; const {in}a: PSingle{ dimension ( lda ka ) where ka is}; const {in}lda: PInteger{}; const {in}beta: PSingle{}; const {inout}c: PSingle{ dimension ( ldc n )}; const {in}ldc: PInteger{}); stdcall;



//file name stbmv
procedure stbmv_(const {in}uplo: PChar{*1}; const {in}trans: PChar{*1}; const {in}diag: PChar{*1}; const {in}n: PInteger{}; const {in}k: PInteger{}; const {in}a: PSingle{ dimension ( lda n )}; const {in}lda: PInteger{}; const {inout}x: PSingle{ dimension at least}; const {in}incx: PInteger{}); stdcall;



//file name stbsv
procedure stbsv_(const {in}uplo: PChar{*1}; const {in}trans: PChar{*1}; const {in}diag: PChar{*1}; const {in}n: PInteger{}; const {in}k: PInteger{}; const {in}a: PSingle{ dimension ( lda n )}; const {in}lda: PInteger{}; const {inout}x: PSingle{ dimension at least}; const {in}incx: PInteger{}); stdcall;



//file name stpmv
procedure stpmv_(const {in}uplo: PChar{*1}; const {in}trans: PChar{*1}; const {in}diag: PChar{*1}; const {in}n: PInteger{}; const {in}ap: PSingle{ dimension at least}; const {inout}x: PSingle{ dimension at least}; const {in}incx: PInteger{}); stdcall;



//file name stpsv
procedure stpsv_(const {in}uplo: PChar{*1}; const {in}trans: PChar{*1}; const {in}diag: PChar{*1}; const {in}n: PInteger{}; const {in}ap: PSingle{ dimension at least}; const {inout}x: PSingle{ dimension at least}; const {in}incx: PInteger{}); stdcall;



//file name strmm
procedure strmm_(const {in}side: PChar{*1}; const {in}uplo: PChar{*1}; const {in}transa: PChar{*1}; const {in}diag: PChar{*1}; const {in}m: PInteger{}; const {in}n: PInteger{}; const {in}alpha: PSingle{}; const {in}a: PSingle{ dimension ( lda k ) where k is m}; const {in}lda: PInteger{}; const {inout}b: PSingle{ dimension ( ldb n )}; const {in}ldb: PInteger{}); stdcall;



//file name strmv
procedure strmv_(const {in}uplo: PChar{*1}; const {in}trans: PChar{*1}; const {in}diag: PChar{*1}; const {in}n: PInteger{}; const {in}a: PSingle{ dimension ( lda n )}; const {in}lda: PInteger{}; const {inout}x: PSingle{ dimension at least}; const {in}incx: PInteger{}); stdcall;



//file name strsm
procedure strsm_(const {in}side: PChar{*1}; const {in}uplo: PChar{*1}; const {in}transa: PChar{*1}; const {in}diag: PChar{*1}; const {in}m: PInteger{}; const {in}n: PInteger{}; const {in}alpha: PSingle{}; const {in}a: PSingle{ dimension ( lda k )}; const {in}lda: PInteger{}; const {inout}b: PSingle{ dimension ( ldb n )}; const {in}ldb: PInteger{}); stdcall;



//file name strsv
procedure strsv_(const {in}uplo: PChar{*1}; const {in}trans: PChar{*1}; const {in}diag: PChar{*1}; const {in}n: PInteger{}; const {in}a: PSingle{ dimension ( lda n )}; const {in}lda: PInteger{}; const {inout}x: PSingle{ dimension at least}; const {in}incx: PInteger{}); stdcall;



//file name xerbla
procedure xerbla_(const {in}srname: PChar{*(*)}; const {in}info: PInteger{}); stdcall;



//file name xerbla_array
procedure xerbla_array_(const {in}srname_array: PChar{(1) array dimension (srname_len)}; const {in}srname_len: PInteger{}; const {in}info: PInteger{}); stdcall;



//file name zaxpy
procedure zaxpy_(const {in}n: PInteger{}; const {in}za: PDComplex{}; const {in}zx: PDComplex{ dimension ( 1 + ( n - 1 )*abs( incx ) )}; const {in}incx: PInteger{}; const {inout}zy: PDComplex{ dimension ( 1 + ( n - 1 )*abs( incy ) )}; const {in}incy: PInteger{}); stdcall;



//file name zcopy
procedure zcopy_(const {in}n: PInteger{}; const {in}zx: PDComplex{ dimension ( 1 + ( n - 1 )*abs( incx ) )}; const {in}incx: PInteger{}; const {out}zy: PDComplex{ dimension ( 1 + ( n - 1 )*abs( incy ) )}; const {in}incy: PInteger{}); stdcall;



//file name zdotc
function zdotc_(const {in}n: PInteger{}; const {in}zx: PDComplex{ dimension ( 1 + ( n - 1 )*abs( incx ) )}; const {in}incx: PInteger{}; const {in}zy: PDComplex{ dimension ( 1 + ( n - 1 )*abs( incy ) )}; const {in}incy: PInteger{}):PDComplex{}; stdcall;



//file name zdotu
function zdotu(const {in}n: PInteger{}; const {in}zx: PDComplex{ dimension ( 1 + ( n - 1 )*abs( incx ) )}; const {in}incx: PInteger{}; const {in}zy: PDComplex{ dimension ( 1 + ( n - 1 )*abs( incy ) )}; const {in}incy: PInteger{}):PDComplex{}; stdcall;



//file name zdrot
procedure zdrot_(const {in}n: PInteger{}; const {inout}zx: PDComplex{ dimension at least}; const {in}incx: PInteger{}; const {inout}zy: PDComplex{ dimension at least}; const {in}incy: PInteger{}; const {in}c: PDouble{}; const {in}s: PDouble{}); stdcall;



//file name zdscal
procedure zdscal_(const {in}n: PInteger{}; const {in}da: PDouble{}; const {inout}zx: PDComplex{ dimension ( 1 + ( n - 1 )*abs( incx ) )}; const {in}incx: PInteger{}); stdcall;



//file name zgbmv
procedure zgbmv_(const {in}trans: PChar{*1}; const {in}m: PInteger{}; const {in}n: PInteger{}; const {in}kl: PInteger{}; const {in}ku: PInteger{}; const {in}alpha: PDComplex{}; const {in}a: PDComplex{ dimension ( lda n )}; const {in}lda: PInteger{}; const {in}x: PDComplex{ dimension at least}; const {in}incx: PInteger{}; const {in}beta: PDComplex{}; const {inout}y: PDComplex{ dimension at least}; const {in}incy: PInteger{}); stdcall;



//file name zgemm
procedure zgemm_(const {in}transa: PChar{*1}; const {in}transb: PChar{*1}; const {in}m: PInteger{}; const {in}n: PInteger{}; const {in}k: PInteger{}; const {in}alpha: PDComplex{}; const {in}a: PDComplex{ dimension ( lda ka ) where ka is}; const {in}lda: PInteger{}; const {in}b: PDComplex{ dimension ( ldb kb ) where kb is}; const {in}ldb: PInteger{}; const {in}beta: PDComplex{}; const {inout}c: PDComplex{ dimension ( ldc n )}; const {in}ldc: PInteger{}); stdcall;



//file name zgemv
procedure zgemv_(const {in}trans: PChar{*1}; const {in}m: PInteger{}; const {in}n: PInteger{}; const {in}alpha: PDComplex{}; const {in}a: PDComplex{ dimension ( lda n )}; const {in}lda: PInteger{}; const {in}x: PDComplex{ dimension at least}; const {in}incx: PInteger{}; const {in}beta: PDComplex{}; const {inout}y: PDComplex{ dimension at least}; const {in}incy: PInteger{}); stdcall;



//file name zgerc
procedure zgerc_(const {in}m: PInteger{}; const {in}n: PInteger{}; const {in}alpha: PDComplex{}; const {in}x: PDComplex{ dimension at least}; const {in}incx: PInteger{}; const {in}y: PDComplex{ dimension at least}; const {in}incy: PInteger{}; const {inout}a: PDComplex{ dimension ( lda n )}; const {in}lda: PInteger{}); stdcall;



//file name zgeru
procedure zgeru_(const {in}m: PInteger{}; const {in}n: PInteger{}; const {in}alpha: PDComplex{}; const {in}x: PDComplex{ dimension at least}; const {in}incx: PInteger{}; const {in}y: PDComplex{ dimension at least}; const {in}incy: PInteger{}; const {inout}a: PDComplex{ dimension ( lda n )}; const {in}lda: PInteger{}); stdcall;



//file name zhbmv
procedure zhbmv_(const {in}uplo: PChar{*1}; const {in}n: PInteger{}; const {in}k: PInteger{}; const {in}alpha: PDComplex{}; const {in}a: PDComplex{ dimension ( lda n )}; const {in}lda: PInteger{}; const {in}x: PDComplex{ dimension at least}; const {in}incx: PInteger{}; const {in}beta: PDComplex{}; const {inout}y: PDComplex{ dimension at least}; const {in}incy: PInteger{}); stdcall;



//file name zhemm
procedure zhemm_(const {in}side: PChar{*1}; const {in}uplo: PChar{*1}; const {in}m: PInteger{}; const {in}n: PInteger{}; const {in}alpha: PDComplex{}; const {in}a: PDComplex{ dimension ( lda ka ) where ka is}; const {in}lda: PInteger{}; const {in}b: PDComplex{ dimension ( ldb n )}; const {in}ldb: PInteger{}; const {in}beta: PDComplex{}; const {inout}c: PDComplex{ dimension ( ldc n )}; const {in}ldc: PInteger{}); stdcall;



//file name zhemv
procedure zhemv_(const {in}uplo: PChar{*1}; const {in}n: PInteger{}; const {in}alpha: PDComplex{}; const {in}a: PDComplex{ dimension ( lda n )}; const {in}lda: PInteger{}; const {in}x: PDComplex{ dimension at least}; const {in}incx: PInteger{}; const {in}beta: PDComplex{}; const {inout}y: PDComplex{ dimension at least}; const {in}incy: PInteger{}); stdcall;



//file name zher
procedure zher_(const {in}uplo: PChar{*1}; const {in}n: PInteger{}; const {in}alpha: PDouble{}; const {in}x: PDComplex{ dimension at least}; const {in}incx: PInteger{}; const {inout}a: PDComplex{ dimension ( lda n )}; const {in}lda: PInteger{}); stdcall;



//file name zher2
procedure zher2_(const {in}uplo: PChar{*1}; const {in}n: PInteger{}; const {in}alpha: PDComplex{}; const {in}x: PDComplex{ dimension at least}; const {in}incx: PInteger{}; const {in}y: PDComplex{ dimension at least}; const {in}incy: PInteger{}; const {inout}a: PDComplex{ dimension ( lda n )}; const {in}lda: PInteger{}); stdcall;



//file name zher2k
procedure zher2k_(const {in}uplo: PChar{*1}; const {in}trans: PChar{*1}; const {in}n: PInteger{}; const {in}k: PInteger{}; const {in}alpha: PDComplex{ }; const {in}a: PDComplex{ dimension ( lda ka ) where ka is}; const {in}lda: PInteger{}; const {in}b: PDComplex{ dimension ( ldb kb ) where kb is}; const {in}ldb: PInteger{}; const {in}beta: PDouble{ }; const {inout}c: PDComplex{ dimension ( ldc n )}; const {in}ldc: PInteger{}); stdcall;



//file name zherk
procedure zherk_(const {in}uplo: PChar{*1}; const {in}trans: PChar{*1}; const {in}n: PInteger{}; const {in}k: PInteger{}; const {in}alpha: PDouble{ }; const {in}a: PDComplex{ dimension ( lda ka ) where ka is}; const {in}lda: PInteger{}; const {in}beta: PDouble{}; const {inout}c: PDComplex{ dimension ( ldc n )}; const {in}ldc: PInteger{}); stdcall;



//file name zhpmv
procedure zhpmv_(const {in}uplo: PChar{*1}; const {in}n: PInteger{}; const {in}alpha: PDComplex{}; const {in}ap: PDComplex{ dimension at least}; const {in}x: PDComplex{ dimension at least}; const {in}incx: PInteger{}; const {in}beta: PDComplex{}; const {inout}y: PDComplex{ dimension at least}; const {in}incy: PInteger{}); stdcall;



//file name zhpr
procedure zhpr_(const {in}uplo: PChar{*1}; const {in}n: PInteger{}; const {in}alpha: PDouble{}; const {in}x: PDComplex{ dimension at least}; const {in}incx: PInteger{}; const {inout}ap: PDComplex{ dimension at least}); stdcall;



//file name zhpr2
procedure zhpr2_(const {in}uplo: PChar{*1}; const {in}n: PInteger{}; const {in}alpha: PDComplex{}; const {in}x: PDComplex{ dimension at least}; const {in}incx: PInteger{}; const {in}y: PDComplex{ dimension at least}; const {in}incy: PInteger{}; const {inout}ap: PDComplex{ dimension at least}); stdcall;



//file name zrotg
procedure zrotg_(const {inout}ca: PDComplex{}; const {in}cb: PDComplex{}; const {out}c: PDouble{}; const {out}s: PDComplex{}); stdcall;



//file name zscal
procedure zscal_(const {in}n: PInteger{}; const {in}za: PDComplex{}; const {inout}zx: PDComplex{ dimension ( 1 + ( n - 1 )*abs( incx ) )}; const {in}incx: PInteger{}); stdcall;



//file name zswap
procedure zswap_(const {in}n: PInteger{}; const {inout}zx: PDComplex{ dimension ( 1 + ( n - 1 )*abs( incx ) )}; const {in}incx: PInteger{}; const {inout}zy: PDComplex{ dimension ( 1 + ( n - 1 )*abs( incy ) )}; const {in}incy: PInteger{}); stdcall;



//file name zsymm
procedure zsymm_(const {in}side: PChar{*1}; const {in}uplo: PChar{*1}; const {in}m: PInteger{}; const {in}n: PInteger{}; const {in}alpha: PDComplex{}; const {in}a: PDComplex{ dimension ( lda ka ) where ka is}; const {in}lda: PInteger{}; const {in}b: PDComplex{ dimension ( ldb n )}; const {in}ldb: PInteger{}; const {in}beta: PDComplex{}; const {inout}c: PDComplex{ dimension ( ldc n )}; const {in}ldc: PInteger{}); stdcall;



//file name zsyr2k
procedure zsyr2k_(const {in}uplo: PChar{*1}; const {in}trans: PChar{*1}; const {in}n: PInteger{}; const {in}k: PInteger{}; const {in}alpha: PDComplex{}; const {in}a: PDComplex{ dimension ( lda ka ) where ka is}; const {in}lda: PInteger{}; const {in}b: PDComplex{ dimension ( ldb kb ) where kb is}; const {in}ldb: PInteger{}; const {in}beta: PDComplex{}; const {inout}c: PDComplex{ dimension ( ldc n )}; const {in}ldc: PInteger{}); stdcall;



//file name zsyrk
procedure zsyrk_(const {in}uplo: PChar{*1}; const {in}trans: PChar{*1}; const {in}n: PInteger{}; const {in}k: PInteger{}; const {in}alpha: PDComplex{}; const {in}a: PDComplex{ dimension ( lda ka ) where ka is}; const {in}lda: PInteger{}; const {in}beta: PDComplex{}; const {inout}c: PDComplex{ dimension ( ldc n )}; const {in}ldc: PInteger{}); stdcall;



//file name ztbmv
procedure ztbmv_(const {in}uplo: PChar{*1}; const {in}trans: PChar{*1}; const {in}diag: PChar{*1}; const {in}n: PInteger{}; const {in}k: PInteger{}; const {in}a: PDComplex{ dimension ( lda n )}; const {in}lda: PInteger{}; const {inout}x: PDComplex{ dimension at least}; const {in}incx: PInteger{}); stdcall;



//file name ztbsv
procedure ztbsv_(const {in}uplo: PChar{*1}; const {in}trans: PChar{*1}; const {in}diag: PChar{*1}; const {in}n: PInteger{}; const {in}k: PInteger{}; const {in}a: PDComplex{ dimension ( lda n )}; const {in}lda: PInteger{}; const {inout}x: PDComplex{ dimension at least}; const {in}incx: PInteger{}); stdcall;



//file name ztpmv
procedure ztpmv_(const {in}uplo: PChar{*1}; const {in}trans: PChar{*1}; const {in}diag: PChar{*1}; const {in}n: PInteger{}; const {in}ap: PDComplex{ dimension at least}; const {inout}x: PDComplex{ dimension at least}; const {in}incx: PInteger{}); stdcall;



//file name ztpsv
procedure ztpsv_(const {in}uplo: PChar{*1}; const {in}trans: PChar{*1}; const {in}diag: PChar{*1}; const {in}n: PInteger{}; const {in}ap: PDComplex{ dimension at least}; const {inout}x: PDComplex{ dimension at least}; const {in}incx: PInteger{}); stdcall;



//file name ztrmm
procedure ztrmm_(const {in}side: PChar{*1}; const {in}uplo: PChar{*1}; const {in}transa: PChar{*1}; const {in}diag: PChar{*1}; const {in}m: PInteger{}; const {in}n: PInteger{}; const {in}alpha: PDComplex{}; const {in}a: PDComplex{ dimension ( lda k ) where k is m}; const {in}lda: PInteger{}; const {inout}b: PDComplex{ dimension ( ldb n )}; const {in}ldb: PInteger{}); stdcall;



//file name ztrmv
procedure ztrmv_(const {in}uplo: PChar{*1}; const {in}trans: PChar{*1}; const {in}diag: PChar{*1}; const {in}n: PInteger{}; const {in}a: PDComplex{ dimension ( lda n )}; const {in}lda: PInteger{}; const {inout}x: PDComplex{ dimension at least}; const {in}incx: PInteger{}); stdcall;



//file name ztrsm
procedure ztrsm_(const {in}side: PChar{*1}; const {in}uplo: PChar{*1}; const {in}transa: PChar{*1}; const {in}diag: PChar{*1}; const {in}m: PInteger{}; const {in}n: PInteger{}; const {in}alpha: PDComplex{}; const {in}a: PDComplex{ dimension ( lda k )}; const {in}lda: PInteger{}; const {inout}b: PDComplex{ dimension ( ldb n )}; const {in}ldb: PInteger{}); stdcall;



//file name ztrsv
procedure ztrsv_(const {in}uplo: PChar{*1}; const {in}trans: PChar{*1}; const {in}diag: PChar{*1}; const {in}n: PInteger{}; const {in}a: PDComplex{ dimension ( lda n )}; const {in}lda: PInteger{}; const {inout}x: PDComplex{ dimension at least}; const {in}incx: PInteger{}); stdcall;

implementation

//file name caxpy
procedure caxpy_; external LibDllPath;
//file name ccopy
procedure ccopy_; external LibDllPath;
//file name cdotc
function cdotc_; external LibDllPath;
//file name cdotu
function cdotu; external LibDllPath;
//file name cgbmv
procedure cgbmv_; external LibDllPath;
//file name cgemm
procedure cgemm_; external LibDllPath;
//file name cgemv
procedure cgemv_; external LibDllPath;
//file name cgerc
procedure cgerc_; external LibDllPath;
//file name cgeru
procedure cgeru_; external LibDllPath;
//file name chbmv
procedure chbmv_; external LibDllPath;
//file name chemm
procedure chemm_; external LibDllPath;
//file name chemv
procedure chemv_; external LibDllPath;
//file name cher
procedure cher_; external LibDllPath;
//file name cher2
procedure cher2_; external LibDllPath;
//file name cher2k
procedure cher2k_; external LibDllPath;
//file name cherk
procedure cherk_; external LibDllPath;
//file name chpmv
procedure chpmv_; external LibDllPath;
//file name chpr
procedure chpr_; external LibDllPath;
//file name chpr2
procedure chpr2_; external LibDllPath;
//file name crotg
procedure crotg_; external LibDllPath;
//file name cscal
procedure cscal_; external LibDllPath;
//file name csrot
procedure csrot_; external LibDllPath;
//file name csscal
procedure csscal_; external LibDllPath;
//file name cswap
procedure cswap_; external LibDllPath;
//file name csymm
procedure csymm_; external LibDllPath;
//file name csyr2k
procedure csyr2k_; external LibDllPath;
//file name csyrk
procedure csyrk_; external LibDllPath;
//file name ctbmv
procedure ctbmv_; external LibDllPath;
//file name ctbsv
procedure ctbsv_; external LibDllPath;
//file name ctpmv
procedure ctpmv_; external LibDllPath;
//file name ctpsv
procedure ctpsv_; external LibDllPath;
//file name ctrmm
procedure ctrmm_; external LibDllPath;
//file name ctrmv
procedure ctrmv_; external LibDllPath;
//file name ctrsm
procedure ctrsm_; external LibDllPath;
//file name ctrsv
procedure ctrsv_; external LibDllPath;
//file name dasum
function dasum_; external LibDllPath;
//file name daxpy
procedure daxpy_; external LibDllPath;
//file name dcabs1
function dcabs1; external LibDllPath;
//file name dcopy
procedure dcopy_; external LibDllPath;
//file name ddot
function ddot; external LibDllPath;
//file name dgbmv
procedure dgbmv_; external LibDllPath;
//file name dgemm
procedure dgemm_; external LibDllPath;
//file name dgemv
procedure dgemv_; external LibDllPath;
//file name dger
procedure dger_; external LibDllPath;
//file name dnrm2
function dnrm2; external LibDllPath;
//file name drot
procedure drot_; external LibDllPath;
//file name drotg
procedure drotg_; external LibDllPath;
//file name drotm
procedure drotm_; external LibDllPath;
//file name drotmg
procedure drotmg_; external LibDllPath;
//file name dsbmv
procedure dsbmv_; external LibDllPath;
//file name dscal
procedure dscal_; external LibDllPath;
//file name dsdot
function dsdot; external LibDllPath;
//file name dspmv
procedure dspmv_; external LibDllPath;
//file name dspr
procedure dspr_; external LibDllPath;
//file name dspr2
procedure dspr2_; external LibDllPath;
//file name dswap
procedure dswap_; external LibDllPath;
//file name dsymm
procedure dsymm_; external LibDllPath;
//file name dsymv
procedure dsymv_; external LibDllPath;
//file name dsyr
procedure dsyr_; external LibDllPath;
//file name dsyr2
procedure dsyr2_; external LibDllPath;
//file name dsyr2k
procedure dsyr2k_; external LibDllPath;
//file name dsyrk
procedure dsyrk_; external LibDllPath;
//file name dtbmv
procedure dtbmv_; external LibDllPath;
//file name dtbsv
procedure dtbsv_; external LibDllPath;
//file name dtpmv
procedure dtpmv_; external LibDllPath;
//file name dtpsv
procedure dtpsv_; external LibDllPath;
//file name dtrmm
procedure dtrmm_; external LibDllPath;
//file name dtrmv
procedure dtrmv_; external LibDllPath;
//file name dtrsm
procedure dtrsm_; external LibDllPath;
//file name dtrsv
procedure dtrsv_; external LibDllPath;
//file name dzasum
function dzasum; external LibDllPath;
//file name dznrm2
function dznrm2; external LibDllPath;
//file name icamax
function icamax; external LibDllPath;
//file name idamax
function idamax; external LibDllPath;
//file name isamax
function isamax; external LibDllPath;
//file name izamax
function izamax; external LibDllPath;
//file name lsame
function lsame; external LibDllPath;
//file name sasum
function sasum; external LibDllPath;
//file name saxpy
procedure saxpy_; external LibDllPath;
//file name scabs1
function scabs1; external LibDllPath;
//file name scasum
function scasum; external LibDllPath;
//file name scnrm2
function scnrm2; external LibDllPath;
//file name scopy
procedure scopy_; external LibDllPath;
//file name sdot
function sdot; external LibDllPath;
//file name sdsdot
function sdsdot; external LibDllPath;
//file name sgbmv
procedure sgbmv_; external LibDllPath;
//file name sgemm
procedure sgemm_; external LibDllPath;
//file name sgemv
procedure sgemv_; external LibDllPath;
//file name sger
procedure sger_; external LibDllPath;
//file name snrm2
function snrm2; external LibDllPath;
//file name srot
procedure srot_; external LibDllPath;
//file name srotg
procedure srotg_; external LibDllPath;
//file name srotm
procedure srotm_; external LibDllPath;
//file name srotmg
procedure srotmg_; external LibDllPath;
//file name ssbmv
procedure ssbmv_; external LibDllPath;
//file name sscal
procedure sscal_; external LibDllPath;
//file name sspmv
procedure sspmv_; external LibDllPath;
//file name sspr
procedure sspr_; external LibDllPath;
//file name sspr2
procedure sspr2_; external LibDllPath;
//file name sswap
procedure sswap_; external LibDllPath;
//file name ssymm
procedure ssymm_; external LibDllPath;
//file name ssymv
procedure ssymv_; external LibDllPath;
//file name ssyr
procedure ssyr_; external LibDllPath;
//file name ssyr2
procedure ssyr2_; external LibDllPath;
//file name ssyr2k
procedure ssyr2k_; external LibDllPath;
//file name ssyrk
procedure ssyrk_; external LibDllPath;
//file name stbmv
procedure stbmv_; external LibDllPath;
//file name stbsv
procedure stbsv_; external LibDllPath;
//file name stpmv
procedure stpmv_; external LibDllPath;
//file name stpsv
procedure stpsv_; external LibDllPath;
//file name strmm
procedure strmm_; external LibDllPath;
//file name strmv
procedure strmv_; external LibDllPath;
//file name strsm
procedure strsm_; external LibDllPath;
//file name strsv
procedure strsv_; external LibDllPath;
//file name xerbla
procedure xerbla_; external LibDllPath;
//file name xerbla_array
procedure xerbla_array_; external LibDllPath;
//file name zaxpy
procedure zaxpy_; external LibDllPath;
//file name zcopy
procedure zcopy_; external LibDllPath;
//file name zdotc
function zdotc_; external LibDllPath;
//file name zdotu
function zdotu; external LibDllPath;
//file name zdrot
procedure zdrot_; external LibDllPath;
//file name zdscal
procedure zdscal_; external LibDllPath;
//file name zgbmv
procedure zgbmv_; external LibDllPath;
//file name zgemm
procedure zgemm_; external LibDllPath;
//file name zgemv
procedure zgemv_; external LibDllPath;
//file name zgerc
procedure zgerc_; external LibDllPath;
//file name zgeru
procedure zgeru_; external LibDllPath;
//file name zhbmv
procedure zhbmv_; external LibDllPath;
//file name zhemm
procedure zhemm_; external LibDllPath;
//file name zhemv
procedure zhemv_; external LibDllPath;
//file name zher
procedure zher_; external LibDllPath;
//file name zher2
procedure zher2_; external LibDllPath;
//file name zher2k
procedure zher2k_; external LibDllPath;
//file name zherk
procedure zherk_; external LibDllPath;
//file name zhpmv
procedure zhpmv_; external LibDllPath;
//file name zhpr
procedure zhpr_; external LibDllPath;
//file name zhpr2
procedure zhpr2_; external LibDllPath;
//file name zrotg
procedure zrotg_; external LibDllPath;
//file name zscal
procedure zscal_; external LibDllPath;
//file name zswap
procedure zswap_; external LibDllPath;
//file name zsymm
procedure zsymm_; external LibDllPath;
//file name zsyr2k
procedure zsyr2k_; external LibDllPath;
//file name zsyrk
procedure zsyrk_; external LibDllPath;
//file name ztbmv
procedure ztbmv_; external LibDllPath;
//file name ztbsv
procedure ztbsv_; external LibDllPath;
//file name ztpmv
procedure ztpmv_; external LibDllPath;
//file name ztpsv
procedure ztpsv_; external LibDllPath;
//file name ztrmm
procedure ztrmm_; external LibDllPath;
//file name ztrmv
procedure ztrmv_; external LibDllPath;
//file name ztrsm
procedure ztrsm_; external LibDllPath;
//file name ztrsv
procedure ztrsv_; external LibDllPath;

end.

